Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON programVars bloque
Rule 2     programVars -> vars
Rule 3     programVars -> empty
Rule 4     bloque -> LEFTBRACKET estatutoBloque RIGHTBRACKET
Rule 5     estatutoBloque -> estatuto estatutoBloque
Rule 6     estatutoBloque -> empty
Rule 7     vars -> VAR varId COLON tipo SEMICOLON a
Rule 8     varId -> ID varsId
Rule 9     varsId -> COMMA ID varsId
Rule 10    varsId -> empty
Rule 11    a -> varId COLON tipo SEMICOLON a
Rule 12    a -> empty
Rule 13    tipo -> INT
Rule 14    tipo -> FLOAT
Rule 15    estatuto -> asignacion
Rule 16    estatuto -> condicion
Rule 17    estatuto -> escritura
Rule 18    asignacion -> ID EQUALS expresion SEMICOLON
Rule 19    expresion -> exp comparison
Rule 20    comparison -> GREATER comparisonExp
Rule 21    comparison -> LESS comparisonExp
Rule 22    comparison -> NOTEQUAL comparisonExp
Rule 23    comparison -> empty
Rule 24    comparisonExp -> exp
Rule 25    escritura -> PRINT LEFTPAREN toprint RIGHTPAREN SEMICOLON
Rule 26    toprint -> expresion toprintExp
Rule 27    toprint -> CTESTRING toprintExp
Rule 28    toprintExp -> COMMA toprint
Rule 29    toprintExp -> empty
Rule 30    exp -> termino operator
Rule 31    operator -> PLUS termino operator
Rule 32    operator -> MINUS termino operator
Rule 33    operator -> empty
Rule 34    termino -> factor termOperator
Rule 35    termOperator -> TIMES factor termOperator
Rule 36    termOperator -> DIVIDE factor termOperator
Rule 37    termOperator -> empty
Rule 38    condicion -> IF LEFTPAREN expresion RIGHTPAREN bloque elseCondition SEMICOLON
Rule 39    elseCondition -> ELSE bloque
Rule 40    elseCondition -> empty
Rule 41    varcte -> ID
Rule 42    varcte -> CTEI
Rule 43    varcte -> CTEF
Rule 44    factor -> LEFTPAREN expresion RIGHTPAREN
Rule 45    factor -> sign varcte
Rule 46    sign -> PLUS
Rule 47    sign -> MINUS
Rule 48    sign -> empty
Rule 49    empty -> <empty>

Terminals, with rules where they appear

COLON                : 7 11
COMMA                : 9 28
CTEF                 : 43
CTEI                 : 42
CTESTRING            : 27
DIVIDE               : 36
ELSE                 : 39
EQUALS               : 18
FLOAT                : 14
GREATER              : 20
ID                   : 1 8 9 18 41
IF                   : 38
INT                  : 13
LEFTBRACKET          : 4
LEFTPAREN            : 25 38 44
LESS                 : 21
MINUS                : 32 47
NOTEQUAL             : 22
PLUS                 : 31 46
PRINT                : 25
PROGRAM              : 1
RIGHTBRACKET         : 4
RIGHTPAREN           : 25 38 44
SEMICOLON            : 1 7 11 18 25 38
TIMES                : 35
VAR                  : 7
error                : 

Nonterminals, with rules where they appear

a                    : 7 11
asignacion           : 15
bloque               : 1 38 39
comparison           : 19
comparisonExp        : 20 21 22
condicion            : 16
elseCondition        : 38
empty                : 3 6 10 12 23 29 33 37 40 48
escritura            : 17
estatuto             : 5
estatutoBloque       : 4 5
exp                  : 19 24
expresion            : 18 26 38 44
factor               : 34 35 36
operator             : 30 31 32
program              : 0
programVars          : 1
sign                 : 45
termOperator         : 34 35 36
termino              : 30 31 32
tipo                 : 7 11
toprint              : 25 28
toprintExp           : 26 27
varId                : 7 11
varcte               : 45
vars                 : 2
varsId               : 8 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON programVars bloque

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON programVars bloque

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON programVars bloque

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . programVars bloque
    (2) programVars -> . vars
    (3) programVars -> . empty
    (7) vars -> . VAR varId COLON tipo SEMICOLON a
    (49) empty -> .

    VAR             shift and go to state 7
    LEFTBRACKET     reduce using rule 49 (empty -> .)

    vars                           shift and go to state 5
    programVars                    shift and go to state 6
    empty                          shift and go to state 8

state 5

    (2) programVars -> vars .

    LEFTBRACKET     reduce using rule 2 (programVars -> vars .)


state 6

    (1) program -> PROGRAM ID SEMICOLON programVars . bloque
    (4) bloque -> . LEFTBRACKET estatutoBloque RIGHTBRACKET

    LEFTBRACKET     shift and go to state 9

    bloque                         shift and go to state 10

state 7

    (7) vars -> VAR . varId COLON tipo SEMICOLON a
    (8) varId -> . ID varsId

    ID              shift and go to state 12

    varId                          shift and go to state 11

state 8

    (3) programVars -> empty .

    LEFTBRACKET     reduce using rule 3 (programVars -> empty .)


state 9

    (4) bloque -> LEFTBRACKET . estatutoBloque RIGHTBRACKET
    (5) estatutoBloque -> . estatuto estatutoBloque
    (6) estatutoBloque -> . empty
    (15) estatuto -> . asignacion
    (16) estatuto -> . condicion
    (17) estatuto -> . escritura
    (49) empty -> .
    (18) asignacion -> . ID EQUALS expresion SEMICOLON
    (38) condicion -> . IF LEFTPAREN expresion RIGHTPAREN bloque elseCondition SEMICOLON
    (25) escritura -> . PRINT LEFTPAREN toprint RIGHTPAREN SEMICOLON

    RIGHTBRACKET    reduce using rule 49 (empty -> .)
    ID              shift and go to state 19
    IF              shift and go to state 18
    PRINT           shift and go to state 17

    estatutoBloque                 shift and go to state 13
    asignacion                     shift and go to state 14
    estatuto                       shift and go to state 15
    condicion                      shift and go to state 16
    empty                          shift and go to state 20
    escritura                      shift and go to state 21

state 10

    (1) program -> PROGRAM ID SEMICOLON programVars bloque .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON programVars bloque .)


state 11

    (7) vars -> VAR varId . COLON tipo SEMICOLON a

    COLON           shift and go to state 22


state 12

    (8) varId -> ID . varsId
    (9) varsId -> . COMMA ID varsId
    (10) varsId -> . empty
    (49) empty -> .

    COMMA           shift and go to state 23
    COLON           reduce using rule 49 (empty -> .)

    empty                          shift and go to state 24
    varsId                         shift and go to state 25

state 13

    (4) bloque -> LEFTBRACKET estatutoBloque . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 26


state 14

    (15) estatuto -> asignacion .

    ID              reduce using rule 15 (estatuto -> asignacion .)
    IF              reduce using rule 15 (estatuto -> asignacion .)
    PRINT           reduce using rule 15 (estatuto -> asignacion .)
    RIGHTBRACKET    reduce using rule 15 (estatuto -> asignacion .)


state 15

    (5) estatutoBloque -> estatuto . estatutoBloque
    (5) estatutoBloque -> . estatuto estatutoBloque
    (6) estatutoBloque -> . empty
    (15) estatuto -> . asignacion
    (16) estatuto -> . condicion
    (17) estatuto -> . escritura
    (49) empty -> .
    (18) asignacion -> . ID EQUALS expresion SEMICOLON
    (38) condicion -> . IF LEFTPAREN expresion RIGHTPAREN bloque elseCondition SEMICOLON
    (25) escritura -> . PRINT LEFTPAREN toprint RIGHTPAREN SEMICOLON

    RIGHTBRACKET    reduce using rule 49 (empty -> .)
    ID              shift and go to state 19
    IF              shift and go to state 18
    PRINT           shift and go to state 17

    estatutoBloque                 shift and go to state 27
    asignacion                     shift and go to state 14
    estatuto                       shift and go to state 15
    condicion                      shift and go to state 16
    empty                          shift and go to state 20
    escritura                      shift and go to state 21

state 16

    (16) estatuto -> condicion .

    ID              reduce using rule 16 (estatuto -> condicion .)
    IF              reduce using rule 16 (estatuto -> condicion .)
    PRINT           reduce using rule 16 (estatuto -> condicion .)
    RIGHTBRACKET    reduce using rule 16 (estatuto -> condicion .)


state 17

    (25) escritura -> PRINT . LEFTPAREN toprint RIGHTPAREN SEMICOLON

    LEFTPAREN       shift and go to state 28


state 18

    (38) condicion -> IF . LEFTPAREN expresion RIGHTPAREN bloque elseCondition SEMICOLON

    LEFTPAREN       shift and go to state 29


state 19

    (18) asignacion -> ID . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 30


state 20

    (6) estatutoBloque -> empty .

    RIGHTBRACKET    reduce using rule 6 (estatutoBloque -> empty .)


state 21

    (17) estatuto -> escritura .

    ID              reduce using rule 17 (estatuto -> escritura .)
    IF              reduce using rule 17 (estatuto -> escritura .)
    PRINT           reduce using rule 17 (estatuto -> escritura .)
    RIGHTBRACKET    reduce using rule 17 (estatuto -> escritura .)


state 22

    (7) vars -> VAR varId COLON . tipo SEMICOLON a
    (13) tipo -> . INT
    (14) tipo -> . FLOAT

    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    tipo                           shift and go to state 31

state 23

    (9) varsId -> COMMA . ID varsId

    ID              shift and go to state 34


state 24

    (10) varsId -> empty .

    COLON           reduce using rule 10 (varsId -> empty .)


state 25

    (8) varId -> ID varsId .

    COLON           reduce using rule 8 (varId -> ID varsId .)


state 26

    (4) bloque -> LEFTBRACKET estatutoBloque RIGHTBRACKET .

    $end            reduce using rule 4 (bloque -> LEFTBRACKET estatutoBloque RIGHTBRACKET .)
    SEMICOLON       reduce using rule 4 (bloque -> LEFTBRACKET estatutoBloque RIGHTBRACKET .)
    ELSE            reduce using rule 4 (bloque -> LEFTBRACKET estatutoBloque RIGHTBRACKET .)


state 27

    (5) estatutoBloque -> estatuto estatutoBloque .

    RIGHTBRACKET    reduce using rule 5 (estatutoBloque -> estatuto estatutoBloque .)


state 28

    (25) escritura -> PRINT LEFTPAREN . toprint RIGHTPAREN SEMICOLON
    (26) toprint -> . expresion toprintExp
    (27) toprint -> . CTESTRING toprintExp
    (19) expresion -> . exp comparison
    (30) exp -> . termino operator
    (34) termino -> . factor termOperator
    (44) factor -> . LEFTPAREN expresion RIGHTPAREN
    (45) factor -> . sign varcte
    (46) sign -> . PLUS
    (47) sign -> . MINUS
    (48) sign -> . empty
    (49) empty -> .

    CTESTRING       shift and go to state 36
    LEFTPAREN       shift and go to state 37
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    ID              reduce using rule 49 (empty -> .)
    CTEI            reduce using rule 49 (empty -> .)
    CTEF            reduce using rule 49 (empty -> .)

    expresion                      shift and go to state 35
    toprint                        shift and go to state 43
    sign                           shift and go to state 38
    termino                        shift and go to state 39
    exp                            shift and go to state 40
    factor                         shift and go to state 41
    empty                          shift and go to state 45

state 29

    (38) condicion -> IF LEFTPAREN . expresion RIGHTPAREN bloque elseCondition SEMICOLON
    (19) expresion -> . exp comparison
    (30) exp -> . termino operator
    (34) termino -> . factor termOperator
    (44) factor -> . LEFTPAREN expresion RIGHTPAREN
    (45) factor -> . sign varcte
    (46) sign -> . PLUS
    (47) sign -> . MINUS
    (48) sign -> . empty
    (49) empty -> .

    LEFTPAREN       shift and go to state 37
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    ID              reduce using rule 49 (empty -> .)
    CTEI            reduce using rule 49 (empty -> .)
    CTEF            reduce using rule 49 (empty -> .)

    expresion                      shift and go to state 46
    sign                           shift and go to state 38
    termino                        shift and go to state 39
    exp                            shift and go to state 40
    factor                         shift and go to state 41
    empty                          shift and go to state 45

state 30

    (18) asignacion -> ID EQUALS . expresion SEMICOLON
    (19) expresion -> . exp comparison
    (30) exp -> . termino operator
    (34) termino -> . factor termOperator
    (44) factor -> . LEFTPAREN expresion RIGHTPAREN
    (45) factor -> . sign varcte
    (46) sign -> . PLUS
    (47) sign -> . MINUS
    (48) sign -> . empty
    (49) empty -> .

    LEFTPAREN       shift and go to state 37
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    ID              reduce using rule 49 (empty -> .)
    CTEI            reduce using rule 49 (empty -> .)
    CTEF            reduce using rule 49 (empty -> .)

    expresion                      shift and go to state 47
    sign                           shift and go to state 38
    termino                        shift and go to state 39
    exp                            shift and go to state 40
    factor                         shift and go to state 41
    empty                          shift and go to state 45

state 31

    (7) vars -> VAR varId COLON tipo . SEMICOLON a

    SEMICOLON       shift and go to state 48


state 32

    (13) tipo -> INT .

    SEMICOLON       reduce using rule 13 (tipo -> INT .)


state 33

    (14) tipo -> FLOAT .

    SEMICOLON       reduce using rule 14 (tipo -> FLOAT .)


state 34

    (9) varsId -> COMMA ID . varsId
    (9) varsId -> . COMMA ID varsId
    (10) varsId -> . empty
    (49) empty -> .

    COMMA           shift and go to state 23
    COLON           reduce using rule 49 (empty -> .)

    empty                          shift and go to state 24
    varsId                         shift and go to state 49

state 35

    (26) toprint -> expresion . toprintExp
    (28) toprintExp -> . COMMA toprint
    (29) toprintExp -> . empty
    (49) empty -> .

    COMMA           shift and go to state 51
    RIGHTPAREN      reduce using rule 49 (empty -> .)

    toprintExp                     shift and go to state 50
    empty                          shift and go to state 52

state 36

    (27) toprint -> CTESTRING . toprintExp
    (28) toprintExp -> . COMMA toprint
    (29) toprintExp -> . empty
    (49) empty -> .

    COMMA           shift and go to state 51
    RIGHTPAREN      reduce using rule 49 (empty -> .)

    toprintExp                     shift and go to state 53
    empty                          shift and go to state 52

state 37

    (44) factor -> LEFTPAREN . expresion RIGHTPAREN
    (19) expresion -> . exp comparison
    (30) exp -> . termino operator
    (34) termino -> . factor termOperator
    (44) factor -> . LEFTPAREN expresion RIGHTPAREN
    (45) factor -> . sign varcte
    (46) sign -> . PLUS
    (47) sign -> . MINUS
    (48) sign -> . empty
    (49) empty -> .

    LEFTPAREN       shift and go to state 37
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    ID              reduce using rule 49 (empty -> .)
    CTEI            reduce using rule 49 (empty -> .)
    CTEF            reduce using rule 49 (empty -> .)

    expresion                      shift and go to state 54
    sign                           shift and go to state 38
    termino                        shift and go to state 39
    exp                            shift and go to state 40
    factor                         shift and go to state 41
    empty                          shift and go to state 45

state 38

    (45) factor -> sign . varcte
    (41) varcte -> . ID
    (42) varcte -> . CTEI
    (43) varcte -> . CTEF

    ID              shift and go to state 55
    CTEI            shift and go to state 56
    CTEF            shift and go to state 57

    varcte                         shift and go to state 58

state 39

    (30) exp -> termino . operator
    (31) operator -> . PLUS termino operator
    (32) operator -> . MINUS termino operator
    (33) operator -> . empty
    (49) empty -> .

    PLUS            shift and go to state 60
    MINUS           shift and go to state 62
    GREATER         reduce using rule 49 (empty -> .)
    LESS            reduce using rule 49 (empty -> .)
    NOTEQUAL        reduce using rule 49 (empty -> .)
    COMMA           reduce using rule 49 (empty -> .)
    RIGHTPAREN      reduce using rule 49 (empty -> .)
    SEMICOLON       reduce using rule 49 (empty -> .)

    operator                       shift and go to state 59
    empty                          shift and go to state 61

state 40

    (19) expresion -> exp . comparison
    (20) comparison -> . GREATER comparisonExp
    (21) comparison -> . LESS comparisonExp
    (22) comparison -> . NOTEQUAL comparisonExp
    (23) comparison -> . empty
    (49) empty -> .

    GREATER         shift and go to state 64
    LESS            shift and go to state 65
    NOTEQUAL        shift and go to state 66
    COMMA           reduce using rule 49 (empty -> .)
    RIGHTPAREN      reduce using rule 49 (empty -> .)
    SEMICOLON       reduce using rule 49 (empty -> .)

    comparison                     shift and go to state 63
    empty                          shift and go to state 67

state 41

    (34) termino -> factor . termOperator
    (35) termOperator -> . TIMES factor termOperator
    (36) termOperator -> . DIVIDE factor termOperator
    (37) termOperator -> . empty
    (49) empty -> .

    TIMES           shift and go to state 69
    DIVIDE          shift and go to state 70
    PLUS            reduce using rule 49 (empty -> .)
    MINUS           reduce using rule 49 (empty -> .)
    GREATER         reduce using rule 49 (empty -> .)
    LESS            reduce using rule 49 (empty -> .)
    NOTEQUAL        reduce using rule 49 (empty -> .)
    COMMA           reduce using rule 49 (empty -> .)
    RIGHTPAREN      reduce using rule 49 (empty -> .)
    SEMICOLON       reduce using rule 49 (empty -> .)

    termOperator                   shift and go to state 68
    empty                          shift and go to state 71

state 42

    (46) sign -> PLUS .

    ID              reduce using rule 46 (sign -> PLUS .)
    CTEI            reduce using rule 46 (sign -> PLUS .)
    CTEF            reduce using rule 46 (sign -> PLUS .)


state 43

    (25) escritura -> PRINT LEFTPAREN toprint . RIGHTPAREN SEMICOLON

    RIGHTPAREN      shift and go to state 72


state 44

    (47) sign -> MINUS .

    ID              reduce using rule 47 (sign -> MINUS .)
    CTEI            reduce using rule 47 (sign -> MINUS .)
    CTEF            reduce using rule 47 (sign -> MINUS .)


state 45

    (48) sign -> empty .

    ID              reduce using rule 48 (sign -> empty .)
    CTEI            reduce using rule 48 (sign -> empty .)
    CTEF            reduce using rule 48 (sign -> empty .)


state 46

    (38) condicion -> IF LEFTPAREN expresion . RIGHTPAREN bloque elseCondition SEMICOLON

    RIGHTPAREN      shift and go to state 73


state 47

    (18) asignacion -> ID EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 74


state 48

    (7) vars -> VAR varId COLON tipo SEMICOLON . a
    (11) a -> . varId COLON tipo SEMICOLON a
    (12) a -> . empty
    (8) varId -> . ID varsId
    (49) empty -> .

    ID              shift and go to state 12
    LEFTBRACKET     reduce using rule 49 (empty -> .)

    a                              shift and go to state 75
    varId                          shift and go to state 76
    empty                          shift and go to state 77

state 49

    (9) varsId -> COMMA ID varsId .

    COLON           reduce using rule 9 (varsId -> COMMA ID varsId .)


state 50

    (26) toprint -> expresion toprintExp .

    RIGHTPAREN      reduce using rule 26 (toprint -> expresion toprintExp .)


state 51

    (28) toprintExp -> COMMA . toprint
    (26) toprint -> . expresion toprintExp
    (27) toprint -> . CTESTRING toprintExp
    (19) expresion -> . exp comparison
    (30) exp -> . termino operator
    (34) termino -> . factor termOperator
    (44) factor -> . LEFTPAREN expresion RIGHTPAREN
    (45) factor -> . sign varcte
    (46) sign -> . PLUS
    (47) sign -> . MINUS
    (48) sign -> . empty
    (49) empty -> .

    CTESTRING       shift and go to state 36
    LEFTPAREN       shift and go to state 37
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    ID              reduce using rule 49 (empty -> .)
    CTEI            reduce using rule 49 (empty -> .)
    CTEF            reduce using rule 49 (empty -> .)

    expresion                      shift and go to state 35
    toprint                        shift and go to state 78
    sign                           shift and go to state 38
    termino                        shift and go to state 39
    exp                            shift and go to state 40
    factor                         shift and go to state 41
    empty                          shift and go to state 45

state 52

    (29) toprintExp -> empty .

    RIGHTPAREN      reduce using rule 29 (toprintExp -> empty .)


state 53

    (27) toprint -> CTESTRING toprintExp .

    RIGHTPAREN      reduce using rule 27 (toprint -> CTESTRING toprintExp .)


state 54

    (44) factor -> LEFTPAREN expresion . RIGHTPAREN

    RIGHTPAREN      shift and go to state 79


state 55

    (41) varcte -> ID .

    TIMES           reduce using rule 41 (varcte -> ID .)
    DIVIDE          reduce using rule 41 (varcte -> ID .)
    PLUS            reduce using rule 41 (varcte -> ID .)
    MINUS           reduce using rule 41 (varcte -> ID .)
    GREATER         reduce using rule 41 (varcte -> ID .)
    LESS            reduce using rule 41 (varcte -> ID .)
    NOTEQUAL        reduce using rule 41 (varcte -> ID .)
    COMMA           reduce using rule 41 (varcte -> ID .)
    RIGHTPAREN      reduce using rule 41 (varcte -> ID .)
    SEMICOLON       reduce using rule 41 (varcte -> ID .)


state 56

    (42) varcte -> CTEI .

    TIMES           reduce using rule 42 (varcte -> CTEI .)
    DIVIDE          reduce using rule 42 (varcte -> CTEI .)
    PLUS            reduce using rule 42 (varcte -> CTEI .)
    MINUS           reduce using rule 42 (varcte -> CTEI .)
    GREATER         reduce using rule 42 (varcte -> CTEI .)
    LESS            reduce using rule 42 (varcte -> CTEI .)
    NOTEQUAL        reduce using rule 42 (varcte -> CTEI .)
    COMMA           reduce using rule 42 (varcte -> CTEI .)
    RIGHTPAREN      reduce using rule 42 (varcte -> CTEI .)
    SEMICOLON       reduce using rule 42 (varcte -> CTEI .)


state 57

    (43) varcte -> CTEF .

    TIMES           reduce using rule 43 (varcte -> CTEF .)
    DIVIDE          reduce using rule 43 (varcte -> CTEF .)
    PLUS            reduce using rule 43 (varcte -> CTEF .)
    MINUS           reduce using rule 43 (varcte -> CTEF .)
    GREATER         reduce using rule 43 (varcte -> CTEF .)
    LESS            reduce using rule 43 (varcte -> CTEF .)
    NOTEQUAL        reduce using rule 43 (varcte -> CTEF .)
    COMMA           reduce using rule 43 (varcte -> CTEF .)
    RIGHTPAREN      reduce using rule 43 (varcte -> CTEF .)
    SEMICOLON       reduce using rule 43 (varcte -> CTEF .)


state 58

    (45) factor -> sign varcte .

    TIMES           reduce using rule 45 (factor -> sign varcte .)
    DIVIDE          reduce using rule 45 (factor -> sign varcte .)
    PLUS            reduce using rule 45 (factor -> sign varcte .)
    MINUS           reduce using rule 45 (factor -> sign varcte .)
    COMMA           reduce using rule 45 (factor -> sign varcte .)
    RIGHTPAREN      reduce using rule 45 (factor -> sign varcte .)
    SEMICOLON       reduce using rule 45 (factor -> sign varcte .)
    GREATER         reduce using rule 45 (factor -> sign varcte .)
    LESS            reduce using rule 45 (factor -> sign varcte .)
    NOTEQUAL        reduce using rule 45 (factor -> sign varcte .)


state 59

    (30) exp -> termino operator .

    GREATER         reduce using rule 30 (exp -> termino operator .)
    LESS            reduce using rule 30 (exp -> termino operator .)
    NOTEQUAL        reduce using rule 30 (exp -> termino operator .)
    COMMA           reduce using rule 30 (exp -> termino operator .)
    RIGHTPAREN      reduce using rule 30 (exp -> termino operator .)
    SEMICOLON       reduce using rule 30 (exp -> termino operator .)


state 60

    (31) operator -> PLUS . termino operator
    (34) termino -> . factor termOperator
    (44) factor -> . LEFTPAREN expresion RIGHTPAREN
    (45) factor -> . sign varcte
    (46) sign -> . PLUS
    (47) sign -> . MINUS
    (48) sign -> . empty
    (49) empty -> .

    LEFTPAREN       shift and go to state 37
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    ID              reduce using rule 49 (empty -> .)
    CTEI            reduce using rule 49 (empty -> .)
    CTEF            reduce using rule 49 (empty -> .)

    sign                           shift and go to state 38
    termino                        shift and go to state 80
    factor                         shift and go to state 41
    empty                          shift and go to state 45

state 61

    (33) operator -> empty .

    GREATER         reduce using rule 33 (operator -> empty .)
    LESS            reduce using rule 33 (operator -> empty .)
    NOTEQUAL        reduce using rule 33 (operator -> empty .)
    COMMA           reduce using rule 33 (operator -> empty .)
    RIGHTPAREN      reduce using rule 33 (operator -> empty .)
    SEMICOLON       reduce using rule 33 (operator -> empty .)


state 62

    (32) operator -> MINUS . termino operator
    (34) termino -> . factor termOperator
    (44) factor -> . LEFTPAREN expresion RIGHTPAREN
    (45) factor -> . sign varcte
    (46) sign -> . PLUS
    (47) sign -> . MINUS
    (48) sign -> . empty
    (49) empty -> .

    LEFTPAREN       shift and go to state 37
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    ID              reduce using rule 49 (empty -> .)
    CTEI            reduce using rule 49 (empty -> .)
    CTEF            reduce using rule 49 (empty -> .)

    sign                           shift and go to state 38
    termino                        shift and go to state 81
    factor                         shift and go to state 41
    empty                          shift and go to state 45

state 63

    (19) expresion -> exp comparison .

    RIGHTPAREN      reduce using rule 19 (expresion -> exp comparison .)
    COMMA           reduce using rule 19 (expresion -> exp comparison .)
    SEMICOLON       reduce using rule 19 (expresion -> exp comparison .)


state 64

    (20) comparison -> GREATER . comparisonExp
    (24) comparisonExp -> . exp
    (30) exp -> . termino operator
    (34) termino -> . factor termOperator
    (44) factor -> . LEFTPAREN expresion RIGHTPAREN
    (45) factor -> . sign varcte
    (46) sign -> . PLUS
    (47) sign -> . MINUS
    (48) sign -> . empty
    (49) empty -> .

    LEFTPAREN       shift and go to state 37
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    ID              reduce using rule 49 (empty -> .)
    CTEI            reduce using rule 49 (empty -> .)
    CTEF            reduce using rule 49 (empty -> .)

    comparisonExp                  shift and go to state 82
    sign                           shift and go to state 38
    termino                        shift and go to state 39
    exp                            shift and go to state 83
    factor                         shift and go to state 41
    empty                          shift and go to state 45

state 65

    (21) comparison -> LESS . comparisonExp
    (24) comparisonExp -> . exp
    (30) exp -> . termino operator
    (34) termino -> . factor termOperator
    (44) factor -> . LEFTPAREN expresion RIGHTPAREN
    (45) factor -> . sign varcte
    (46) sign -> . PLUS
    (47) sign -> . MINUS
    (48) sign -> . empty
    (49) empty -> .

    LEFTPAREN       shift and go to state 37
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    ID              reduce using rule 49 (empty -> .)
    CTEI            reduce using rule 49 (empty -> .)
    CTEF            reduce using rule 49 (empty -> .)

    comparisonExp                  shift and go to state 84
    sign                           shift and go to state 38
    termino                        shift and go to state 39
    exp                            shift and go to state 83
    factor                         shift and go to state 41
    empty                          shift and go to state 45

state 66

    (22) comparison -> NOTEQUAL . comparisonExp
    (24) comparisonExp -> . exp
    (30) exp -> . termino operator
    (34) termino -> . factor termOperator
    (44) factor -> . LEFTPAREN expresion RIGHTPAREN
    (45) factor -> . sign varcte
    (46) sign -> . PLUS
    (47) sign -> . MINUS
    (48) sign -> . empty
    (49) empty -> .

    LEFTPAREN       shift and go to state 37
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    ID              reduce using rule 49 (empty -> .)
    CTEI            reduce using rule 49 (empty -> .)
    CTEF            reduce using rule 49 (empty -> .)

    comparisonExp                  shift and go to state 85
    sign                           shift and go to state 38
    termino                        shift and go to state 39
    exp                            shift and go to state 83
    factor                         shift and go to state 41
    empty                          shift and go to state 45

state 67

    (23) comparison -> empty .

    COMMA           reduce using rule 23 (comparison -> empty .)
    RIGHTPAREN      reduce using rule 23 (comparison -> empty .)
    SEMICOLON       reduce using rule 23 (comparison -> empty .)


state 68

    (34) termino -> factor termOperator .

    PLUS            reduce using rule 34 (termino -> factor termOperator .)
    MINUS           reduce using rule 34 (termino -> factor termOperator .)
    GREATER         reduce using rule 34 (termino -> factor termOperator .)
    LESS            reduce using rule 34 (termino -> factor termOperator .)
    NOTEQUAL        reduce using rule 34 (termino -> factor termOperator .)
    COMMA           reduce using rule 34 (termino -> factor termOperator .)
    RIGHTPAREN      reduce using rule 34 (termino -> factor termOperator .)
    SEMICOLON       reduce using rule 34 (termino -> factor termOperator .)


state 69

    (35) termOperator -> TIMES . factor termOperator
    (44) factor -> . LEFTPAREN expresion RIGHTPAREN
    (45) factor -> . sign varcte
    (46) sign -> . PLUS
    (47) sign -> . MINUS
    (48) sign -> . empty
    (49) empty -> .

    LEFTPAREN       shift and go to state 37
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    ID              reduce using rule 49 (empty -> .)
    CTEI            reduce using rule 49 (empty -> .)
    CTEF            reduce using rule 49 (empty -> .)

    sign                           shift and go to state 38
    factor                         shift and go to state 86
    empty                          shift and go to state 45

state 70

    (36) termOperator -> DIVIDE . factor termOperator
    (44) factor -> . LEFTPAREN expresion RIGHTPAREN
    (45) factor -> . sign varcte
    (46) sign -> . PLUS
    (47) sign -> . MINUS
    (48) sign -> . empty
    (49) empty -> .

    LEFTPAREN       shift and go to state 37
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    ID              reduce using rule 49 (empty -> .)
    CTEI            reduce using rule 49 (empty -> .)
    CTEF            reduce using rule 49 (empty -> .)

    sign                           shift and go to state 38
    factor                         shift and go to state 87
    empty                          shift and go to state 45

state 71

    (37) termOperator -> empty .

    PLUS            reduce using rule 37 (termOperator -> empty .)
    MINUS           reduce using rule 37 (termOperator -> empty .)
    GREATER         reduce using rule 37 (termOperator -> empty .)
    LESS            reduce using rule 37 (termOperator -> empty .)
    NOTEQUAL        reduce using rule 37 (termOperator -> empty .)
    COMMA           reduce using rule 37 (termOperator -> empty .)
    RIGHTPAREN      reduce using rule 37 (termOperator -> empty .)
    SEMICOLON       reduce using rule 37 (termOperator -> empty .)


state 72

    (25) escritura -> PRINT LEFTPAREN toprint RIGHTPAREN . SEMICOLON

    SEMICOLON       shift and go to state 88


state 73

    (38) condicion -> IF LEFTPAREN expresion RIGHTPAREN . bloque elseCondition SEMICOLON
    (4) bloque -> . LEFTBRACKET estatutoBloque RIGHTBRACKET

    LEFTBRACKET     shift and go to state 9

    bloque                         shift and go to state 89

state 74

    (18) asignacion -> ID EQUALS expresion SEMICOLON .

    ID              reduce using rule 18 (asignacion -> ID EQUALS expresion SEMICOLON .)
    IF              reduce using rule 18 (asignacion -> ID EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 18 (asignacion -> ID EQUALS expresion SEMICOLON .)
    RIGHTBRACKET    reduce using rule 18 (asignacion -> ID EQUALS expresion SEMICOLON .)


state 75

    (7) vars -> VAR varId COLON tipo SEMICOLON a .

    LEFTBRACKET     reduce using rule 7 (vars -> VAR varId COLON tipo SEMICOLON a .)


state 76

    (11) a -> varId . COLON tipo SEMICOLON a

    COLON           shift and go to state 90


state 77

    (12) a -> empty .

    LEFTBRACKET     reduce using rule 12 (a -> empty .)


state 78

    (28) toprintExp -> COMMA toprint .

    RIGHTPAREN      reduce using rule 28 (toprintExp -> COMMA toprint .)


state 79

    (44) factor -> LEFTPAREN expresion RIGHTPAREN .

    TIMES           reduce using rule 44 (factor -> LEFTPAREN expresion RIGHTPAREN .)
    DIVIDE          reduce using rule 44 (factor -> LEFTPAREN expresion RIGHTPAREN .)
    PLUS            reduce using rule 44 (factor -> LEFTPAREN expresion RIGHTPAREN .)
    MINUS           reduce using rule 44 (factor -> LEFTPAREN expresion RIGHTPAREN .)
    COMMA           reduce using rule 44 (factor -> LEFTPAREN expresion RIGHTPAREN .)
    RIGHTPAREN      reduce using rule 44 (factor -> LEFTPAREN expresion RIGHTPAREN .)
    SEMICOLON       reduce using rule 44 (factor -> LEFTPAREN expresion RIGHTPAREN .)
    GREATER         reduce using rule 44 (factor -> LEFTPAREN expresion RIGHTPAREN .)
    LESS            reduce using rule 44 (factor -> LEFTPAREN expresion RIGHTPAREN .)
    NOTEQUAL        reduce using rule 44 (factor -> LEFTPAREN expresion RIGHTPAREN .)


state 80

    (31) operator -> PLUS termino . operator
    (31) operator -> . PLUS termino operator
    (32) operator -> . MINUS termino operator
    (33) operator -> . empty
    (49) empty -> .

    PLUS            shift and go to state 60
    MINUS           shift and go to state 62
    GREATER         reduce using rule 49 (empty -> .)
    LESS            reduce using rule 49 (empty -> .)
    NOTEQUAL        reduce using rule 49 (empty -> .)
    COMMA           reduce using rule 49 (empty -> .)
    RIGHTPAREN      reduce using rule 49 (empty -> .)
    SEMICOLON       reduce using rule 49 (empty -> .)

    operator                       shift and go to state 91
    empty                          shift and go to state 61

state 81

    (32) operator -> MINUS termino . operator
    (31) operator -> . PLUS termino operator
    (32) operator -> . MINUS termino operator
    (33) operator -> . empty
    (49) empty -> .

    PLUS            shift and go to state 60
    MINUS           shift and go to state 62
    GREATER         reduce using rule 49 (empty -> .)
    LESS            reduce using rule 49 (empty -> .)
    NOTEQUAL        reduce using rule 49 (empty -> .)
    COMMA           reduce using rule 49 (empty -> .)
    RIGHTPAREN      reduce using rule 49 (empty -> .)
    SEMICOLON       reduce using rule 49 (empty -> .)

    operator                       shift and go to state 92
    empty                          shift and go to state 61

state 82

    (20) comparison -> GREATER comparisonExp .

    COMMA           reduce using rule 20 (comparison -> GREATER comparisonExp .)
    RIGHTPAREN      reduce using rule 20 (comparison -> GREATER comparisonExp .)
    SEMICOLON       reduce using rule 20 (comparison -> GREATER comparisonExp .)


state 83

    (24) comparisonExp -> exp .

    COMMA           reduce using rule 24 (comparisonExp -> exp .)
    RIGHTPAREN      reduce using rule 24 (comparisonExp -> exp .)
    SEMICOLON       reduce using rule 24 (comparisonExp -> exp .)


state 84

    (21) comparison -> LESS comparisonExp .

    COMMA           reduce using rule 21 (comparison -> LESS comparisonExp .)
    RIGHTPAREN      reduce using rule 21 (comparison -> LESS comparisonExp .)
    SEMICOLON       reduce using rule 21 (comparison -> LESS comparisonExp .)


state 85

    (22) comparison -> NOTEQUAL comparisonExp .

    COMMA           reduce using rule 22 (comparison -> NOTEQUAL comparisonExp .)
    RIGHTPAREN      reduce using rule 22 (comparison -> NOTEQUAL comparisonExp .)
    SEMICOLON       reduce using rule 22 (comparison -> NOTEQUAL comparisonExp .)


state 86

    (35) termOperator -> TIMES factor . termOperator
    (35) termOperator -> . TIMES factor termOperator
    (36) termOperator -> . DIVIDE factor termOperator
    (37) termOperator -> . empty
    (49) empty -> .

    TIMES           shift and go to state 69
    DIVIDE          shift and go to state 70
    PLUS            reduce using rule 49 (empty -> .)
    MINUS           reduce using rule 49 (empty -> .)
    GREATER         reduce using rule 49 (empty -> .)
    LESS            reduce using rule 49 (empty -> .)
    NOTEQUAL        reduce using rule 49 (empty -> .)
    COMMA           reduce using rule 49 (empty -> .)
    RIGHTPAREN      reduce using rule 49 (empty -> .)
    SEMICOLON       reduce using rule 49 (empty -> .)

    termOperator                   shift and go to state 93
    empty                          shift and go to state 71

state 87

    (36) termOperator -> DIVIDE factor . termOperator
    (35) termOperator -> . TIMES factor termOperator
    (36) termOperator -> . DIVIDE factor termOperator
    (37) termOperator -> . empty
    (49) empty -> .

    TIMES           shift and go to state 69
    DIVIDE          shift and go to state 70
    PLUS            reduce using rule 49 (empty -> .)
    MINUS           reduce using rule 49 (empty -> .)
    GREATER         reduce using rule 49 (empty -> .)
    LESS            reduce using rule 49 (empty -> .)
    NOTEQUAL        reduce using rule 49 (empty -> .)
    COMMA           reduce using rule 49 (empty -> .)
    RIGHTPAREN      reduce using rule 49 (empty -> .)
    SEMICOLON       reduce using rule 49 (empty -> .)

    termOperator                   shift and go to state 94
    empty                          shift and go to state 71

state 88

    (25) escritura -> PRINT LEFTPAREN toprint RIGHTPAREN SEMICOLON .

    ID              reduce using rule 25 (escritura -> PRINT LEFTPAREN toprint RIGHTPAREN SEMICOLON .)
    IF              reduce using rule 25 (escritura -> PRINT LEFTPAREN toprint RIGHTPAREN SEMICOLON .)
    PRINT           reduce using rule 25 (escritura -> PRINT LEFTPAREN toprint RIGHTPAREN SEMICOLON .)
    RIGHTBRACKET    reduce using rule 25 (escritura -> PRINT LEFTPAREN toprint RIGHTPAREN SEMICOLON .)


state 89

    (38) condicion -> IF LEFTPAREN expresion RIGHTPAREN bloque . elseCondition SEMICOLON
    (39) elseCondition -> . ELSE bloque
    (40) elseCondition -> . empty
    (49) empty -> .

    ELSE            shift and go to state 96
    SEMICOLON       reduce using rule 49 (empty -> .)

    elseCondition                  shift and go to state 95
    empty                          shift and go to state 97

state 90

    (11) a -> varId COLON . tipo SEMICOLON a
    (13) tipo -> . INT
    (14) tipo -> . FLOAT

    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    tipo                           shift and go to state 98

state 91

    (31) operator -> PLUS termino operator .

    GREATER         reduce using rule 31 (operator -> PLUS termino operator .)
    LESS            reduce using rule 31 (operator -> PLUS termino operator .)
    NOTEQUAL        reduce using rule 31 (operator -> PLUS termino operator .)
    COMMA           reduce using rule 31 (operator -> PLUS termino operator .)
    RIGHTPAREN      reduce using rule 31 (operator -> PLUS termino operator .)
    SEMICOLON       reduce using rule 31 (operator -> PLUS termino operator .)


state 92

    (32) operator -> MINUS termino operator .

    GREATER         reduce using rule 32 (operator -> MINUS termino operator .)
    LESS            reduce using rule 32 (operator -> MINUS termino operator .)
    NOTEQUAL        reduce using rule 32 (operator -> MINUS termino operator .)
    COMMA           reduce using rule 32 (operator -> MINUS termino operator .)
    RIGHTPAREN      reduce using rule 32 (operator -> MINUS termino operator .)
    SEMICOLON       reduce using rule 32 (operator -> MINUS termino operator .)


state 93

    (35) termOperator -> TIMES factor termOperator .

    PLUS            reduce using rule 35 (termOperator -> TIMES factor termOperator .)
    MINUS           reduce using rule 35 (termOperator -> TIMES factor termOperator .)
    GREATER         reduce using rule 35 (termOperator -> TIMES factor termOperator .)
    LESS            reduce using rule 35 (termOperator -> TIMES factor termOperator .)
    NOTEQUAL        reduce using rule 35 (termOperator -> TIMES factor termOperator .)
    COMMA           reduce using rule 35 (termOperator -> TIMES factor termOperator .)
    RIGHTPAREN      reduce using rule 35 (termOperator -> TIMES factor termOperator .)
    SEMICOLON       reduce using rule 35 (termOperator -> TIMES factor termOperator .)


state 94

    (36) termOperator -> DIVIDE factor termOperator .

    PLUS            reduce using rule 36 (termOperator -> DIVIDE factor termOperator .)
    MINUS           reduce using rule 36 (termOperator -> DIVIDE factor termOperator .)
    GREATER         reduce using rule 36 (termOperator -> DIVIDE factor termOperator .)
    LESS            reduce using rule 36 (termOperator -> DIVIDE factor termOperator .)
    NOTEQUAL        reduce using rule 36 (termOperator -> DIVIDE factor termOperator .)
    COMMA           reduce using rule 36 (termOperator -> DIVIDE factor termOperator .)
    RIGHTPAREN      reduce using rule 36 (termOperator -> DIVIDE factor termOperator .)
    SEMICOLON       reduce using rule 36 (termOperator -> DIVIDE factor termOperator .)


state 95

    (38) condicion -> IF LEFTPAREN expresion RIGHTPAREN bloque elseCondition . SEMICOLON

    SEMICOLON       shift and go to state 99


state 96

    (39) elseCondition -> ELSE . bloque
    (4) bloque -> . LEFTBRACKET estatutoBloque RIGHTBRACKET

    LEFTBRACKET     shift and go to state 9

    bloque                         shift and go to state 100

state 97

    (40) elseCondition -> empty .

    SEMICOLON       reduce using rule 40 (elseCondition -> empty .)


state 98

    (11) a -> varId COLON tipo . SEMICOLON a

    SEMICOLON       shift and go to state 101


state 99

    (38) condicion -> IF LEFTPAREN expresion RIGHTPAREN bloque elseCondition SEMICOLON .

    ID              reduce using rule 38 (condicion -> IF LEFTPAREN expresion RIGHTPAREN bloque elseCondition SEMICOLON .)
    IF              reduce using rule 38 (condicion -> IF LEFTPAREN expresion RIGHTPAREN bloque elseCondition SEMICOLON .)
    PRINT           reduce using rule 38 (condicion -> IF LEFTPAREN expresion RIGHTPAREN bloque elseCondition SEMICOLON .)
    RIGHTBRACKET    reduce using rule 38 (condicion -> IF LEFTPAREN expresion RIGHTPAREN bloque elseCondition SEMICOLON .)


state 100

    (39) elseCondition -> ELSE bloque .

    SEMICOLON       reduce using rule 39 (elseCondition -> ELSE bloque .)


state 101

    (11) a -> varId COLON tipo SEMICOLON . a
    (11) a -> . varId COLON tipo SEMICOLON a
    (12) a -> . empty
    (8) varId -> . ID varsId
    (49) empty -> .

    ID              shift and go to state 12
    LEFTBRACKET     reduce using rule 49 (empty -> .)

    a                              shift and go to state 102
    varId                          shift and go to state 76
    empty                          shift and go to state 77

state 102

    (11) a -> varId COLON tipo SEMICOLON a .

    LEFTBRACKET     reduce using rule 11 (a -> varId COLON tipo SEMICOLON a .)

